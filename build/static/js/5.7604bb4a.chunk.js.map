{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/pages/SingleComicPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","error","alt","SingleComicPage","comicId","useParams","useState","comic","setComic","useMarvelService","loading","getComic","clearError","useEffect","updateComic","then","errorMessage","spinner","className","thumbnail","title","description","pageCount","language","price","to"],"mappings":"iGAAe,UAA0B,kC,OCQ1BA,IANM,WACnB,OACE,qBAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAWC,IAAKC,EAAOC,IAAI,Y,oIC2C9GC,UAtCS,WACtB,IAAOC,EAAWC,cAAXD,QACP,EAA0BE,mBAAS,MAAK,mBAAjCC,EAAK,KAAEC,EAAQ,KACtB,EAA+CC,cAAxCC,EAAO,EAAPA,QAAST,EAAK,EAALA,MAAOU,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAGjCC,qBAAU,WACRC,MACC,CAACV,IAEJ,IAAMU,EAAc,WAClBF,IACAD,EAASP,GACNW,MAAK,SAAAR,GAAK,OAAIC,EAASD,OAGtBS,EAAef,EAAQ,cAAC,IAAY,IAAM,KAC1CgB,EAAUP,EAAU,cAAC,IAAO,IAAM,KAExC,OACE,qCACGM,EACAC,IACEP,GAAWT,IAAUM,IAAU,sBAAKW,UAAU,eAAc,UAC7D,qBAAKlB,IAAKO,EAAMY,UAAWjB,IAAKK,EAAMa,MAAOF,UAAU,sBACvD,sBAAKA,UAAU,qBAAoB,UACjC,oBAAIA,UAAU,qBAAoB,SAAEX,EAAMa,QAC1C,mBAAGF,UAAU,sBAAqB,SAAEX,EAAMc,cAC1C,mBAAGH,UAAU,sBAAqB,SAAEX,EAAMe,YAC1C,oBAAGJ,UAAU,sBAAqB,UAAC,aAAWX,EAAMgB,YACpD,qBAAKL,UAAU,sBAAqB,SAAEX,EAAMiB,WAE9C,cAAC,IAAI,CAACC,GAAG,UAAUP,UAAU,qBAAoB,SAAC","file":"static/js/5.7604bb4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={error} alt=\"error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import {useParams, Link} from \"react-router-dom\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport useMarvelService from \"../../services/MarvelServices\";\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n  const {comicId} = useParams();\r\n  const [comic, setComic] = useState(null);\r\n  const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n  }, [comicId])\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComic(comicId)\r\n      .then(comic => setComic(comic));\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <>\r\n      {errorMessage}\r\n      {spinner}\r\n      {!(loading || error || !comic) && <div className=\"single-comic\">\r\n        <img src={comic.thumbnail} alt={comic.title} className=\"single-comic__img\"/>\r\n        <div className=\"single-comic__info\">\r\n          <h2 className=\"single-comic__name\">{comic.title}</h2>\r\n          <p className=\"single-comic__descr\">{comic.description}</p>\r\n          <p className=\"single-comic__descr\">{comic.pageCount}</p>\r\n          <p className=\"single-comic__descr\">Language: {comic.language}</p>\r\n          <div className=\"single-comic__price\">{comic.price}</div>\r\n        </div>\r\n        <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n      </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingleComicPage;"],"sourceRoot":""}