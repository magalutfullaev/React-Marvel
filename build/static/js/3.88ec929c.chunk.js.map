{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","error","alt","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","View","name","description","thumbnail","homepage","wiki","className","href","RandomChar","useState","char","setChar","useMarvelService","loading","getCharacter","clearError","updateChar","id","Math","floor","random","then","useEffect","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","items","setItems","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","activeElement","setActiveElement","getAllCharacters","onRequest","initial","onCharLoaded","newCharList","ended","map","item","onCharSelected","disabled","Skeleton","comics","slice","CharInfo","charId","skeleton","MainPage","selectedChar","setSelectedChar","decoration"],"mappings":"iGAAe,UAA0B,kC,OCQ1BA,IANM,WACnB,OACE,qBAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAWC,IAAKC,EAAOC,IAAI,Y,6ICF7H,SAASC,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,OAAAC,EAAA,GAAeP,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOkB,0BAChBlB,OAAOmB,iBAAiBT,EAAQV,OAAOkB,0BAA0BJ,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOiB,eAAeP,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,E,UCjCM,MAA0B,oC,sCCiDnCU,EAAO,SAAH,GAA0D,IAApDC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KACtD,OACE,sBAAKC,UAAU,oBAAmB,UAChC,qBACEjC,IAAK8B,EACL5B,IAAI,mBACJ+B,UAAS,yBAEP,wEADAH,EAEI,aACA,MAGR,sBAAKG,UAAU,mBAAkB,UAC/B,mBAAGA,UAAU,mBAAkB,SAAEL,IACjC,mBAAGK,UAAU,oBAAmB,SAAEJ,IAClC,sBAAKI,UAAU,mBAAkB,UAC/B,mBAAGC,KAAMH,EAAUE,UAAU,sBAAqB,SAChD,qBAAKA,UAAU,QAAO,SAAC,eAEzB,mBAAGC,KAAMF,EAAMC,UAAU,2BAA0B,SACjD,qBAAKA,UAAU,QAAO,SAAC,qBAQpBE,EAvEI,WACjB,MAAwBC,mBAAS,IAAG,mBAA7BC,EAAI,KAAEC,EAAO,KACpB,EAAmDC,cAA5CC,EAAO,EAAPA,QAASvC,EAAK,EAALA,MAAOwC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAE/BC,EAAa,WACjBD,IACA,IAAME,EAAKC,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAC5DN,EAAaG,GACVI,MAAK,SAACX,GAAI,OAAKC,EAAQD,OAG5BY,qBAAU,WACRN,MACC,IAEH,IAAMO,EAAejD,EAAQ,cAACR,EAAA,EAAY,IAAM,KAC1C0D,EAAUX,EAAU,cAACY,EAAA,EAAO,IAAM,KAClCC,EAAYb,GAAWvC,EAA8B,KAArB,cAAC,EAAI,KAAKoC,IAEhD,OACE,sBAAKJ,UAAU,aAAY,UACxBiB,EACAC,EACAE,EACD,sBAAKpB,UAAU,qBAAoB,UACjC,oBAAGA,UAAU,oBAAmB,UAAC,8BAE/B,uBAAM,4CAGR,mBAAGA,UAAU,oBAAmB,SAAC,0BACjC,wBAAQA,UAAU,sBAAqB,SACrC,qBAAKqB,QAASX,EAAYV,UAAU,QAAO,SAAC,aAI9C,qBAAKjC,IAAKuD,EAASrD,IAAI,UAAU+B,UAAU,kC,OCqCpCuB,G,MA1EE,SAACC,GAChB,MAA0BrB,mBAAS,IAAG,mBAA/BsB,EAAK,KAAEC,EAAQ,KACtB,EAA4CvB,oBAAS,GAAM,mBAApDwB,EAAc,KAAEC,EAAiB,KACxC,EAA4BzB,mBAAS,KAAI,mBAAlC0B,EAAM,KAAEC,EAAS,KACxB,EAAkC3B,oBAAS,GAAM,mBAA1C4B,EAAS,KAAEC,EAAY,KAC9B,EAA0C7B,mBAAS,GAAE,mBAA9C8B,EAAa,KAAEC,EAAgB,KACtC,EAA2C5B,cAApCC,EAAO,EAAPA,QAASvC,EAAK,EAALA,MAAOmE,EAAgB,EAAhBA,iBAEvBnB,qBAAU,WACRoB,EAAUP,GAAQ,KACjB,IAEH,IAAMO,EAAY,SAACP,EAAQQ,GACzBT,GAAmBS,GACnBF,EAAiBN,GACdd,KAAKuB,IAGJA,EAAe,SAACC,GACpB,IAAIC,GAAQ,EACRD,EAAYpD,OAAS,IAAGqD,GAAQ,GAEpCd,GAAS,SAAAD,GAAK,4BAAQA,GAAK,YAAKc,OAChCX,GAAkB,GAClBE,GAAU,SAAAD,GAAM,OAAIA,EAAS,KAC7BG,EAAaQ,IAGTvB,EAAejD,EAAQ,cAACR,EAAA,EAAY,IAAM,KAC1C0D,EAAUX,IAAYoB,EAAiB,cAACR,EAAA,EAAO,IAAM,KAE3D,OACE,sBAAKnB,UAAU,aAAY,UACxBiB,EACAC,EACD,oBAAIlB,UAAU,aAAY,SACvByB,EAAMgB,KAAI,SAACC,GACN,OACE,qBAEErB,QAAS,WACPG,EAAMmB,eAAeD,EAAK/B,IAC1BuB,EAAiBQ,EAAK/B,KAExBX,UAAS,oBAAeiC,IAAkBS,EAAK/B,GAAK,uBAAyB,IAAK,UAElF,qBACE5C,IAAK2E,EAAK7C,UACV5B,IAAI,QACJ+B,UAEE,wEADA0C,EAAK7C,UAED,YACA,KAGR,qBAAKG,UAAU,aAAY,SAAE0C,EAAK/C,SAjB7B+C,EAAK/B,SAuBtB,wBACEU,QAAS,kBAAMe,EAAUP,IACzBe,SAAUjB,EACV3B,UAAU,mCACVvC,MAAO,CAAC,QAAWsE,EAAY,OAAS,SAAS,SAEjD,qBAAK/B,UAAU,QAAO,SAAC,qBCvDhB6C,G,YAjBE,WACb,OACI,qCACI,mBAAG7C,UAAU,eAAc,SAAC,iDAC5B,sBAAKA,UAAU,WAAU,UACrB,sBAAKA,UAAU,yBAAwB,UACnC,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCC8BzBN,EAAO,SAAH,GAAkE,IAA5DC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAAM+C,EAAM,EAANA,OAI5D,OAFAA,EAASA,EAAO3D,OAAS,GAAK2D,EAAOC,MAAM,IAAMD,EAG/C,qCACE,sBAAK9C,UAAU,eAAc,UAC3B,qBACEjC,IAAK8B,EACLG,UAEE,wEADAH,EAEI,aACA,GAEN5B,IAAI,UAEN,gCACE,qBAAK+B,UAAU,kBAAiB,SAAEL,IAClC,sBAAKK,UAAU,aAAY,UACzB,mBAAGC,KAAMH,EAAUE,UAAU,sBAAqB,SAChD,qBAAKA,UAAU,QAAO,SAAC,eAEzB,mBAAGC,KAAMF,EAAMC,UAAU,2BAA0B,SACjD,qBAAKA,UAAU,QAAO,SAAC,oBAK/B,qBAAKA,UAAU,cAAa,SAAEJ,IAC9B,qBAAKI,UAAU,eAAc,SAAC,YAC9B,oBAAIA,UAAU,oBAAmB,SAC9B8C,EAAO3D,OACN2D,EAAOL,KAAI,SAACC,EAAMzD,GAAC,OACjB,oBAAYe,UAAU,oBAAmB,SACtC0C,EAAK/C,MADCV,MAKX,4BAAG,iDAWE+D,EApFE,SAACxB,GAChB,MAAwBrB,mBAAS,MAAK,mBAA/BC,EAAI,KAAEC,EAAO,KACpB,EAAmDC,cAA5CC,EAAO,EAAPA,QAASvC,EAAK,EAALA,MAAOwC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAErCO,qBAAU,WACRN,MACC,IAEHM,qBAAU,WACRN,MACC,CAACc,EAAMyB,SAEV,IAAMvC,EAAa,WACjB,IAAQuC,EAAWzB,EAAXyB,OACHA,IACLxC,IACAD,EAAayC,GACVlC,MAAK,SAAAX,GAAI,OAAIC,EAAQD,QAGpB8C,EAAW9C,GAAQG,GAAWvC,EAAQ,KAAO,cAAC,EAAQ,IACtDiD,EAAejD,EAAQ,cAACR,EAAA,EAAY,IAAM,KAC1C0D,EAAUX,EAAU,cAACY,EAAA,EAAO,IAAM,KAClCC,EAAYb,GAAWvC,IAAUoC,EAA6B,KAArB,cAAC,EAAI,KAAKA,IACzD,OACE,sBAAKJ,UAAU,aAAY,UACxBkD,EACAjC,EACAC,EACAE,MCtCQ,MAA0B,mCCwB1B+B,UAlBE,WACf,MAAwChD,mBAAS,MAAK,mBAA/CiD,EAAY,KAAEC,EAAe,KAKpC,OACE,qCACE,cAAC,EAAU,IACX,sBAAKrD,UAAU,gBAAe,UAC5B,cAAC,EAAQ,CAAC2C,eAPO,SAAChC,GACtB0C,EAAgB1C,MAOZ,cAAC,EAAQ,CAACsC,OAAQG,OAEpB,qBAAKpD,UAAU,gBAAgBjC,IAAKuF,EAAYrF,IAAI","file":"static/js/3.88ec929c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={error} alt=\"error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport {Component, useEffect, useState} from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelServices\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n  const {loading, error, getCharacter, clearError} = useMarvelService();\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id)\n      .then((char) => setChar(char));\n  };\n\n  useEffect(() => {\n    updateChar();\n  }, [])\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View {...char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\">\n          <div onClick={updateChar} className=\"inner\">\n            try it\n          </div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n}\n\nconst View = ({ name, description, thumbnail, homepage, wiki }) => {\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className={`randomchar__img${\n          thumbnail ===\n          \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n            ? \" not-found\"\n            : \"\"\n        }`}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import \"./charList.scss\";\nimport {Component, useEffect, useState} from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport useMarvelService from \"../../services/MarvelServices\";\n\nconst CharList = (props) => {\n  const [items, setItems] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const [activeElement, setActiveElement] = useState(0)\n  const {loading, error, getAllCharacters} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    setNewItemLoading(!initial);\n    getAllCharacters(offset)\n      .then(onCharLoaded);\n  };\n\n  const onCharLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) ended = true;\n\n    setItems(items => [...items, ...newCharList]);\n    setNewItemLoading(false);\n    setOffset(offset => offset + 9);\n    setCharEnded(ended);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      <ul className=\"char__grid\">\n        {items.map((item) => {\n              return (\n                <li\n                  key={item.id}\n                  onClick={() => {\n                    props.onCharSelected(item.id);\n                    setActiveElement(item.id)\n                  }}\n                  className={`char__item${activeElement === item.id ? ' char__item_selected' : ''}`}\n                >\n                  <img\n                    src={item.thumbnail}\n                    alt=\"abyss\"\n                    className={\n                      item.thumbnail ===\n                      \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n                        ? \"not-found\"\n                        : \"\"\n                    }\n                  />\n                  <div className=\"char__name\">{item.name}</div>\n                </li>\n              );\n            })\n        }\n      </ul>\n      <button\n        onClick={() => onRequest(offset)}\n        disabled={newItemLoading}\n        className=\"button button__main button__long\"\n        style={{'display': charEnded ? 'none' : 'block'}}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import \"./charInfo.scss\";\nimport {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport Spinner from \"../spinner/Spinner\";\nimport useMarvelService from \"../../services/MarvelServices\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n  const {loading, error, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [])\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId])\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) return;\n    clearError();\n    getCharacter(charId)\n      .then(char => setChar(char));\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View {...char} /> : null;\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n}\n\nconst View = ({ name, description, thumbnail, homepage, wiki, comics }) => {\n\n  comics = comics.length > 10 ? comics.slice(10) : comics;\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img\n          src={thumbnail}\n          className={\n            thumbnail ===\n            \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n              ? \" not-found\"\n              : \"\"\n          }\n          alt=\"abyss\"\n        />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length ? (\n          comics.map((item, i) => (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          ))\n        ) : (\n          <p>There is no comics with this character</p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number\n}\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport {useState} from \"react\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setSelectedChar(id)\r\n  };\r\n  return (\r\n    <>\r\n      <RandomChar />\r\n      <div className=\"char__content\">\r\n        <CharList onCharSelected={onCharSelected} />\r\n        <CharInfo charId={selectedChar} />\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage;"],"sourceRoot":""}